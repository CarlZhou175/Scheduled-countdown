{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/mathiashalen/Documents/GitHub/Scheduled-countdown/MobileVersion/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport socketIOClient from \"socket.io-client\";\nvar ENDPOINT = \"http://192.168.8.146:3000\";\nvar countDownString;\nvar countDownTimeInMS;\nvar showNowClock;\nvar newCurrentTime;\nvar startTitleHolder;\nvar offsetTimeInit;\nexport default function App() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      response = _useState2[0],\n      setResponse = _useState2[1];\n\n  useEffect(function () {\n    var socket = socketIOClient(ENDPOINT);\n    socket.on(\"centerTextContent\", function (data) {\n      countDownString = data.countDownString;\n      countDownTimeInMS = data.countDownTimeInMS;\n      showNowClock = data.showNowClock;\n      newCurrentTime = data.newCurrentTime;\n      startTitleHolder = data.startTitleHolder;\n      offsetTimeInit = data.offsetTimeInit;\n\n      if (countDownTimeInMS < 5 * 60 * 1000 && countDownTimeInMS > 5 * 60 * 1000 - 5000) {\n        Vibration.vibrate(PATTERN, true);\n      } else {\n        Vibration.cancel();\n      }\n\n      setResponse(countDownString);\n    });\n  }, []);\n  var ONE_SECOND_IN_MS = 1000;\n  var PATTERN = [100, 100, 100, 100];\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, response), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#2b2b2b',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  text: {\n    color: \"white\",\n    fontSize: 100\n  }\n});","map":{"version":3,"sources":["/Users/mathiashalen/Documents/GitHub/Scheduled-countdown/MobileVersion/App.js"],"names":["StatusBar","React","useState","useEffect","socketIOClient","ENDPOINT","countDownString","countDownTimeInMS","showNowClock","newCurrentTime","startTitleHolder","offsetTimeInit","App","response","setResponse","socket","on","data","Vibration","vibrate","PATTERN","cancel","ONE_SECOND_IN_MS","styles","container","text","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","color","fontSize"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAEA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,IAAMC,QAAQ,GAAG,2BAAjB;AACA,IAAIC,eAAJ;AACA,IAAIC,iBAAJ;AACA,IAAIC,YAAJ;AACA,IAAIC,cAAJ;AACA,IAAIC,gBAAJ;AACA,IAAIC,cAAJ;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEMV,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,MAEnBW,QAFmB;AAAA,MAETC,WAFS;;AAG1BX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMY,MAAM,GAAGX,cAAc,CAACC,QAAD,CAA7B;AAGAU,IAAAA,MAAM,CAACC,EAAP,CAAU,mBAAV,EAA+B,UAAAC,IAAI,EAAI;AACrCX,MAAAA,eAAe,GAAOW,IAAI,CAACX,eAA3B;AACAC,MAAAA,iBAAiB,GAAKU,IAAI,CAACV,iBAA3B;AACAC,MAAAA,YAAY,GAAUS,IAAI,CAACT,YAA3B;AACAC,MAAAA,cAAc,GAAQQ,IAAI,CAACR,cAA3B;AACAC,MAAAA,gBAAgB,GAAMO,IAAI,CAACP,gBAA3B;AACAC,MAAAA,cAAc,GAAQM,IAAI,CAACN,cAA3B;;AAEA,UAAIJ,iBAAiB,GAAI,IAAE,EAAF,GAAK,IAA1B,IAAoCA,iBAAiB,GAAI,IAAE,EAAF,GAAK,IAAN,GAAc,IAA1E,EAA+E;AAC7EW,QAAAA,SAAS,CAACC,OAAV,CAAkBC,OAAlB,EAA0B,IAA1B;AACD,OAFD,MAGI;AACFF,QAAAA,SAAS,CAACG,MAAV;AACD;;AACDP,MAAAA,WAAW,CAACR,eAAD,CAAX;AACD,KAfD;AAkBD,GAtBQ,EAsBN,EAtBM,CAAT;AA8BF,MAAMgB,gBAAgB,GAAG,IAAzB;AACA,MAAMF,OAAO,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,CAAhB;AAGA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BZ,QAA3B,CADF,EAEE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD;AAED,IAAMU,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BN,EAAAA,IAAI,EAAC;AACHO,IAAAA,KAAK,EAAC,OADH;AAEHC,IAAAA,QAAQ,EAAE;AAFP;AAP0B,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View , Vibration , Platform, Button} from 'react-native';\nimport socketIOClient from \"socket.io-client\";\nconst ENDPOINT = \"http://192.168.8.146:3000\";\nvar countDownString;\nvar countDownTimeInMS;\nvar showNowClock;\nvar newCurrentTime;\nvar startTitleHolder;\nvar offsetTimeInit;\n\nexport default function App() {\n  //-- SocketIO\n    const [response, setResponse] = useState(\"\");\n    useEffect(() => {\n      const socket = socketIOClient(ENDPOINT);\n\n\n      socket.on(\"centerTextContent\", data => {\n        countDownString     = data.countDownString;\n        countDownTimeInMS   = data.countDownTimeInMS;\n        showNowClock        = data.showNowClock;\n        newCurrentTime      = data.newCurrentTime;\n        startTitleHolder    = data.startTitleHolder;\n        offsetTimeInit      = data.offsetTimeInit;\n\n        if (countDownTimeInMS < (5*60*1000) &&  countDownTimeInMS > (5*60*1000) - 5000){\n          Vibration.vibrate(PATTERN,true)\n        }\n        else{\n          Vibration.cancel();\n        }\n        setResponse(countDownString);\n      });\n\n\n    }, []);\n\n  //-- SocketIO\n\n\n\n\n  //---------- VIBRATION\n  const ONE_SECOND_IN_MS = 1000;\n  const PATTERN = [100,100,100,100];\n  //---------- VIBRATION\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.text}>{response}</Text>\n      <StatusBar style=\"auto\" />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#2b2b2b',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text:{\n    color:\"white\",\n    fontSize: 100,\n  }\n});\n"]},"metadata":{},"sourceType":"module"}